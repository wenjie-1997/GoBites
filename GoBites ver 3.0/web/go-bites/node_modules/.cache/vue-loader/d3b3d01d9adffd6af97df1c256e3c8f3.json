{"remainingRequest":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/src/components/DisplayWithFilter.vue?vue&type=style&index=0&id=68d99640&lang=scss&scoped=true&","dependencies":[{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/src/components/DisplayWithFilter.vue","mtime":1607665803539},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNkaXNwbGF5LXdpdGgtZmlsdGVyIHsKICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwoKICAgIC5kaXNwbGF5LXdpdGgtZmlsdGVyLWNvbnRhaW5lciB7CiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIH0KfQo="},{"version":3,"sources":["DisplayWithFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DisplayWithFilter.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"display-with-filter\">\n        <div class=\"display-with-filter-container\" v-if=\"requiredConditions\">\n            <div class=\"row\">\n                <div class=\"input-group col-xl-3\" v-for=\"cond in requiredConditions\" :key=\"cond.condition\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                        <input type=\"checkbox\" aria-label=\"Checkbox for following text input\" v-model=\"cond.toggle\" true-value=\"yes\" false-value=\"no\" @click=\"selectUnselectCondition(cond)\">\n                        </div>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\" v-model=\"cond.condition\" readonly>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'DisplayWithFilter',\n    props: {\n        requiredConditions: {\n            type: Array,\n        }\n    },\n    methods: {\n        selectUnselectCondition(condition) {\n            condition.toggle == 'no'? this.$emit('setSelectedCondition', condition.condition) : this.$emit('unselectCondition', condition.condition);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    #display-with-filter {\n        margin-top: 10px;\n        margin-bottom: 10px;\n\n        .display-with-filter-container {\n            text-align: left;\n        }\n    }\n</style>"]}]}