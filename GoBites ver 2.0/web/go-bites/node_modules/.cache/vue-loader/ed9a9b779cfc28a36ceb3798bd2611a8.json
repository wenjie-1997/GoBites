{"remainingRequest":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/src/views/UserDetails.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/src/views/UserDetails.vue","mtime":1607665803546},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pharveish/goBites/sprint2/Flutter_App_GoBites/GoBites ver 2.0/web/go-bites/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnVzZXItZm9ybS1kZXRhaWxzIHsKICAgIHdpZHRoOiA2MCU7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICB0b3A6IDUwJTsKICAgIGxlZnQ6IDUwJTsKICAgIG1hcmdpbi10b3A6IDUwMHB4OwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICAvKiBJRSA5ICovCiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgLyogQ2hyb21lLCBTYWZhcmksIE9wZXJhICovCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE1MSwgMzgsIDM4LCAwKTsKCiAgICBoMSB7CiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgfQoKICAgIC5idXR0b24tZ3JvdXAgewogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIH0KCiAgICAuYnRuLWN1c3RvbSB7CiAgICAgICAgbWFyZ2luOiAxMHB4OwogICAgfQoKICAgIHRleHRhcmVhIHsKICAgICAgICByZXNpemU6IG5vbmU7CiAgICB9Cn0K"},{"version":3,"sources":["UserDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"UserDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div id=\"user-details\">\n    <div class=\"user-form-details\" v-if=\"userExist && userId!='-1'\">\n        <loading v-if='isLoading' :is-full-page=\"fullPage\" :loader='loader' />\n        <div v-if=\"user\">\n            <h1 v-if=\"!isLoading\">User Info</h1>\n            <h1 v-if=\"isLoading\">Processing...</h1>\n            <form action=\"#\" v-if=\"userType == 'customer' && !isLoading\">\n                <div class=\"form-row\">\n                    <div class=\"col-md-2 mb-3\">\n                        <label for=\"cid\">ID</label>\n                        <input type=\"number\" id=\"cid\" class=\"form-control\" v-model=\"user.CID\" readonly />\n                    </div>\n\n                    <div  class=\"col-md-10 mb-3\">\n                        <label for=\"customerName\">Customer Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"customerName\" v-model=\"customer.custname\" :readonly=\"readOnlyStatus\" required />\n                    </div>\n                </div>\n                \n                <div class=\"form-row\">\n                    <div class=\"col-md-6 mb-3\">\n                        <label>Birth Date</label>\n                        <input type=\"date\" class=\"form-control\"  v-model=\"customer.birthdate\" :readonly=\"readOnlyStatus\" required />\n                    </div>\n\n                    <div class=\"col-md-6 mb-3\">\n                        <label>Email</label>\n                        <input type=\"email\" class=\"form-control\" v-model=\"customer.email\" :readonly=\"readOnlyStatus\" required />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Gender</label>\n                    <div>\n                        <div class=\"form-check form-check-inline\" >\n                            <input type=\"radio\" class=\"form-check-input\" value=\"Female\" name=\"gender\" id=\"female\" v-model=\"customer.gender\" :disabled=\"readOnlyStatus\">\n                            <label class=\"form-check-label\" for=\"female\">Female</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input type=\"radio\" class=\"form-check-input\" value=\"Male\" name=\"gender\" id=\"male\" v-model=\"customer.gender\" :disabled=\"readOnlyStatus\">\n                            <label class=\"form-check-label\" for=\"male\">Male</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Address</label>\n                    <textarea rows=\"4\" type=\"text\" class=\"form-control\" v-model=\"customer.address\" :readonly=\"readOnlyStatus\" required />\n                </div>\n\n                <div class=\"button-group\">\n                    <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"editInfo\" value=\"Edit\" v-if=\"readOnlyStatus\" />\n                    <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"saveInfo\" value=\"Save\" v-if=\"!readOnlyStatus\" />\n                    <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"cancelEditInfo\" value=\"Cancel\" v-if=\"!readOnlyStatus\" />\n                    <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"back\" value=\"Back\" v-if=\"readOnlyStatus\" />\n                    <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"deleteUser\" value=\"Delete\" v-if=\"readOnlyStatus\" />\n                </div>\n            </form>\n            <form action=\"#\" v-if=\"userType == 'restaurant'\">\n                <div v-if='!isLoading'>\n                    <div class=\"form-row\">\n                        <div class=\"col-md-2 mb-3\">\n                            <label for=\"rid\">ID</label>\n                            <input type=\"number\" id=\"rid\" class=\"form-control\" v-model=\"restaurant.RID\" readonly />\n                        </div>\n\n                        <div  class=\"col-md-10 mb-3\">\n                            <label for=\"restaurantName\">Restaurant Name</label>\n                            <input type=\"text\" class=\"form-control\" id=\"restaurantName\" v-model=\"restaurant.restaurantname\" :readonly=\"readOnlyStatus\" required />\n                        </div>\n                    </div>\n\n                    <div class=\"form-row\">\n                        <div class=\"col-md-2 mb-3\">\n                            <label for=\"restaurantStyle\">Restaurant Style</label>\n                            <input type=\"text\" id=\"restaurantStyle\" class=\"form-control\" v-model=\"restaurant.restaurantstyle\" :readonly=\"readOnlyStatus\" />\n                        </div>\n\n                        <div  class=\"col-md-10 mb-3\">\n                            <label for=\"restaurantOwner\">Restaurant Owner</label>\n                            <input type=\"text\" class=\"form-control\" id=\"restaurantOwner\" v-model=\"restaurant.ownername\" :readonly=\"readOnlyStatus\" required />\n                        </div>\n                    </div>\n\n                    <div  class=\"form-group\">\n                        <label>Address</label>\n                        <textarea rows=\"4\" type=\"text\" class=\"form-control\" v-model=\"restaurant.address\" :readonly=\"readOnlyStatus\" required />\n                    </div>\n\n                    <div  class=\"form-group\">\n                        <label>Telephone No</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"restaurant.telephoneNo\" :readonly=\"readOnlyStatus\" required />\n                    </div>\n\n                    <div class=\"button-group\">\n                        <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"editInfo\" value=\"Edit\" v-if=\"readOnlyStatus\" />\n                        <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"saveInfo\" value=\"Save\" v-if=\"!readOnlyStatus\" />\n                        <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"cancelEditInfo\" value=\"Cancel\" v-if=\"!readOnlyStatus\" />\n                        <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"back\" value=\"Back\" v-if=\"readOnlyStatus\" />\n                        <input class=\"btn btn-primary btn-custom\" type=\"button\" @click=\"deleteUser\" value=\"Delete\" v-if=\"readOnlyStatus\" />\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport CustomerDataService from '../services/CustomerDataService';\nimport RestaurantDataService from '../services/RestaurantDataService';\n\nimport loading from '../mixins/loading.vue'\n\nexport default {\n    name: 'User-Details',\n    components: {\n        loading\n    },\n    data() {\n        return {\n            userExist: false,\n            userId: '-1',\n            userType: 'none',\n            readOnlyStatus: true,\n            user: null,\n            isLoading: false,\n            fullPage: true,\n            loader: 'bars',\n\n            customer: {\n                CID: '',\n                custname: '',\n                birthdate: '',\n                gender: '',\n                email: '',\n                address: '',\n            },\n\n            restaurant: {\n                RID: '',\n                restaurantname: '',\n                ownername: '',\n                address: '',\n                restaurantstyle: '',\n                telephoneNo: '',\n            },\n        }\n    },\n    created() {\n        this.isLoading = true;\n        let urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.has('id') && urlParams.has('type') ) {\n            this.userId = urlParams.get('id');\n            this.userType = urlParams.get('type');\n            this.userExist = true;\n\n            if(this.userType.toLowerCase() === \"customer\") {\n                this.retrieveACustomerInformation();\n            } else if(this.userType.toLowerCase() === \"restaurant\") {\n                this.retrieveARestaurantInformation();\n            } else {\n                if (this.getCustomerId == \"\" && this.userType.toLowerCase() === \"customer\") {\n                    this.$router.push('/customer');\n                    return;\n                } else if (this.getRestaurantId == \"\" && this.userType.toLowerCase() === \"restaurant\") {\n                    this.$router.push('/restaurant');\n                    return;\n                }\n            }\n        } else {\n            this.userExist = false;\n            this.userId = '-1';\n            this.$router.back();\n        }\n    },\n    methods: {\n        retrieveACustomerInformation() {\n            this.isLoading = true;\n            this.user = null;\n            CustomerDataService.getACustomerInformation(this.userId)\n                .then(resp => {\n                    this.isLoading = false;\n                    this.user = resp.data[0];\n\n                    this.customer.CID = this.user.CID;\n                    this.customer.custname = this.user.custname;\n                    this.customer.gender = this.user.gender;\n                    this.customer.birthdate = this.user.birthdate;\n                    this.customer.email = this.user.email;\n                    this.customer.address = this.user.address;\n                })\n                .catch( err => {\n                    this.isLoading = false;\n                    console.log(err);\n                });\n        },\n        retrieveARestaurantInformation() {\n            this.isLoading = true;\n            this.user = null;\n            RestaurantDataService.getARestaurantInformation(this.userId)\n                .then(resp => {\n                    this.isLoading = false;\n                    this.user = resp.data[0];\n\n                    this.restaurant.RID = this.user.RID;\n                    this.restaurant.restaurantname = this.user.restaurantname;\n                    this.restaurant.ownername = this.user.ownername;\n                    this.restaurant.restaurantstyle = this.user.restaurantstyle;\n                    this.restaurant.telephoneNo = this.user.telephoneNo;\n                    this.restaurant.address = this.user.address;\n                })\n                .catch( err => {\n                    this.isLoading = false;\n                    console.log(err);\n                });\n        },\n        editInfo: function () {\n            this.readOnlyStatus = false;\n        },\n        saveInfo: async function () {\n            this.readOnlyStatus = true;\n            this.isLoading = true;\n            if (this.userType.toLowerCase() === \"customer\") {\n                const cid = this.user.CID;\n                const custname = this.user.custname;\n                const gender = this.user.gender;\n                const birthdate = this.user.birthdate;\n                const email = this.user.email;\n                const address = this.user.address;\n                \n                this.user.CID = this.customer.CID;\n                this.user.custname = this.customer.custname;\n                this.user.gender = this.customer.gender;\n                this.user.birthdate = this.customer.birthdate;\n                this.user.email = this.customer.email;\n                this.user.address = this.customer.address;\n\n                await CustomerDataService.updateACustomerInformation(this.user)\n                    .then(() => {\n                        this.isLoading = false;\n                        this.retrieveACustomerInformation();\n                        alert(\"Successfully update\");\n                    })\n                    .catch(err => {\n                        this.isLoading = false;\n                        console.log(err.message);\n\n                        this.user.CID = cid;\n                        this.user.custname = custname;\n                        this.user.gender = gender;\n                        this.user.birthdate = birthdate;\n                        this.user.email = email;\n                        this.user.address = address;\n\n                        this.revertUserInformation();\n                        alert(\"Fail to update\");\n                    })\n                \n            } else if (this.userType.toLowerCase() === \"restaurant\") {\n                const rid = this.user.RID;\n                const restaurantname = this.user.restaurantname;\n                const ownername = this.user.ownername;\n                const restaurantstyle = this.user.restaurantstyle;\n                const telephoneNo = this.user.telephoneNo;\n                const address = this.user.address;\n\n                this.user.RID = this.restaurant.RID;\n                this.user.restaurantname = this.restaurant.restaurantname;\n                this.user.ownername = this.restaurant.ownername;\n                this.user.restaurantstyle = this.restaurant.restaurantstyle;\n                this.user.telephoneNo = this.restaurant.telephoneNo;\n                this.user.address = this.restaurant.address;\n                console.log(this.user.ownername);\n                await RestaurantDataService.updateARestaurantInformation(this.user)\n                    .then(() => {\n                        this.isLoading = false;\n                        this.retrieveARestaurantInformation();\n                        alert(\"Successfully update\");\n                    })\n                    .catch(err => {\n                        this.isLoading = false;\n                        console.log(err.message);\n                        \n                        this.user.RID = this.restaurant.RID = rid;\n                        this.user.restaurantname = restaurantname;\n                        this.user.ownername = ownername;\n                        this.user.restaurantstyle = restaurantstyle;\n                        this.user.telephoneNo = telephoneNo;\n                        this.user.address = address;\n\n                        this.revertUserInformation();\n                        alert(\"Fail to update\");\n                    })                \n            }\n        },\n        cancelEditInfo: function () {\n            this.revertUserInformation();\n            this.readOnlyStatus = true;\n        },\n        revertUserInformation() {\n            if(this.userType == \"customer\") {\n                this.customer.CID = this.user.CID;\n                this.customer.custname = this.user.custname;\n                this.customer.gender = this.user.gender;\n                this.customer.birthdate = this.user.birthdate;\n                this.customer.email = this.user.email;\n                this.customer.address = this.user.address;\n\n            } else if(this.userType == \"restaurant\") {\n                this.restaurant.RID = this.user.RID;\n                this.restaurant.restaurantname = this.user.restaurantname;\n                this.restaurant.ownername = this.user.ownername;\n                this.restaurant.restaurantstyle = this.user.restaurantstyle;\n                this.restaurant.telephoneNo = this.user.telephoneNo;\n                this.restaurant.address = this.user.address;\n            }\n        },\n        back: function () {\n            if (this.userType.toLowerCase() === \"restaurant\") {\n                this.$router.push('/restaurant');\n            } else if (this.userType.toLowerCase() === \"customer\") {\n                this.$router.push('/customer');\n            }\n        },\n        deleteUser: async function () {\n            if (this.userType.toLowerCase() === \"restaurant\") {\n                if (window.confirm(`Delete user with id ${this.user.RID}`)) {\n                    this.isLoading = true;\n                    await RestaurantDataService.deleteARestaurantInformation(this.user.RID)\n                        .then(() => {\n                            alert(\"Delete Successfully\");\n                            this.back();\n                        })\n                        .catch(err => {\n                            alert(\"Failed to delete\");\n                            console.log(err.message);\n                            this.isLoading = false;\n                        })\n                }\n            } else if (this.userType.toLowerCase() === \"customer\") {\n                if (window.confirm(`Delete user with id ${this.user.CID}`)) {\n                    this.isLoading = true;\n                    await CustomerDataService.deleteACustomerInformation(this.user.CID)\n                        .then(() => {\n                            alert(\"Delete Successfully\");\n                            this.back();\n                        })\n                        .catch(err => {\n                            alert(\"Failed to delete\");\n                            console.log(err.message);\n                            this.isLoading = false;\n                        })\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n\n.user-form-details {\n    width: 60%;\n    position: relative;\n    top: 50%;\n    left: 50%;\n    margin-top: 500px;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    /* IE 9 */\n    -webkit-transform: translate(-50%, -50%);\n    /* Chrome, Safari, Opera */\n    background-color: rgba(151, 38, 38, 0);\n\n    h1 {\n        text-align: center;\n    }\n\n    .button-group {\n        text-align: center;\n    }\n\n    .btn-custom {\n        margin: 10px;\n    }\n\n    textarea {\n        resize: none;\n    }\n}\n</style>\n"]}]}